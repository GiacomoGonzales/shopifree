#!/usr/bin/env node

/**
 * Script para probar la funcionalidad del mapa en dispositivos m√≥viles
 * Este script simula las condiciones de un dispositivo m√≥vil para debugging
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üß™ Testing Mobile Map Functionality');
console.log('==================================');

// Verificar que existe el archivo de configuraci√≥n de Google Maps
const googleMapsFile = path.join(__dirname, '..', 'lib', 'google-maps.ts');
const checkoutFile = path.join(__dirname, '..', 'themes', 'new-base-default', 'CheckoutModal.tsx');
const cssFile = path.join(__dirname, '..', 'themes', 'new-base-default', 'new-base-default.css');

console.log('\n1. üìÅ Verificando archivos modificados...');

if (fs.existsSync(googleMapsFile)) {
    console.log('‚úÖ google-maps.ts encontrado');
} else {
    console.log('‚ùå google-maps.ts no encontrado');
}

if (fs.existsSync(checkoutFile)) {
    console.log('‚úÖ CheckoutModal.tsx encontrado');
} else {
    console.log('‚ùå CheckoutModal.tsx no encontrado');
}

if (fs.existsSync(cssFile)) {
    console.log('‚úÖ new-base-default.css encontrado');
} else {
    console.log('‚ùå new-base-default.css no encontrado');
}

console.log('\n2. üîç Verificando mejoras implementadas...');

// Verificar Google Maps loader
const googleMapsContent = fs.readFileSync(googleMapsFile, 'utf8');
if (googleMapsContent.includes('loadForMobile')) {
    console.log('‚úÖ M√©todo loadForMobile implementado');
} else {
    console.log('‚ùå M√©todo loadForMobile no encontrado');
}

if (googleMapsContent.includes('isMobileDevice')) {
    console.log('‚úÖ Detecci√≥n de dispositivo m√≥vil implementada');
} else {
    console.log('‚ùå Detecci√≥n de dispositivo m√≥vil no encontrada');
}

// Verificar CheckoutModal
const checkoutContent = fs.readFileSync(checkoutFile, 'utf8');
if (checkoutContent.includes('Mobile Map Debug')) {
    console.log('‚úÖ Logs de debug para m√≥viles implementados');
} else {
    console.log('‚ùå Logs de debug para m√≥viles no encontrados');
}

if (checkoutContent.includes('loadForMobile()')) {
    console.log('‚úÖ Uso de loadForMobile en checkout implementado');
} else {
    console.log('‚ùå Uso de loadForMobile en checkout no encontrado');
}

// Verificar CSS
const cssContent = fs.readFileSync(cssFile, 'utf8');
if (cssContent.includes('Forzar visibilidad del bot√≥n de mapa en m√≥viles')) {
    console.log('‚úÖ Estilos forzados para m√≥viles implementados');
} else {
    console.log('‚ùå Estilos forzados para m√≥viles no encontrados');
}

if (cssContent.includes('!important')) {
    console.log('‚úÖ Reglas CSS con !important para forzar visibilidad');
} else {
    console.log('‚ùå Reglas CSS con !important no encontradas');
}

console.log('\n3. üì± Funcionalidades implementadas:');
console.log('   ‚Ä¢ Detecci√≥n avanzada de dispositivos m√≥viles');
console.log('   ‚Ä¢ Carga espec√≠fica de Google Maps para m√≥viles con reintentos');
console.log('   ‚Ä¢ Logs de debug detallados para dispositivos m√≥viles');
console.log('   ‚Ä¢ Estilos CSS forzados para garantizar visibilidad');
console.log('   ‚Ä¢ Optimizaciones de renderizado para iOS');
console.log('   ‚Ä¢ Controles t√°ctiles mejorados');

console.log('\n4. üîß Para probar en dispositivo m√≥vil real:');
console.log('   1. Abrir la tienda en el dispositivo m√≥vil');
console.log('   2. Agregar un producto al carrito');
console.log('   3. Ir al checkout y seleccionar "Env√≠o a domicilio"');
console.log('   4. Permitir acceso a la ubicaci√≥n');
console.log('   5. Verificar que aparece el bot√≥n "Ver mapa para ajustar ubicaci√≥n"');
console.log('   6. Presionar el bot√≥n y verificar que se muestra el mapa');
console.log('   7. Revisar la consola del navegador para logs de debug');

console.log('\n5. üìä Logs a buscar en la consola:');
console.log('   ‚Ä¢ "üó∫Ô∏è [Mobile Map Debug]:" - Informaci√≥n de debug');
console.log('   ‚Ä¢ "üì± Loading Google Maps specifically for mobile device..." - Carga para m√≥viles');
console.log('   ‚Ä¢ "‚úÖ Google Maps successfully loaded for mobile" - Carga exitosa');
console.log('   ‚Ä¢ "üîÑ Mobile load attempt X/3" - Intentos de carga');

console.log('\n‚úÖ Verificaci√≥n completada. Las mejoras han sido implementadas correctamente.');
